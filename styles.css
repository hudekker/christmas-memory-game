body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
  background-color: #f0f0f0;
  /* background-image: url('background.webp'); */
  background: url('Poem1.png') center center / cover no-repeat;
  /* max-width: 80%;
  max-height: 80%; */

  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
}

h1,
.display-text {
  color: white;
  /* Set your desired text color */
  margin-top: 20px;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
  /* Add a text shadow */
  /* Adjust as needed */
}

.display-text {
  font-size: 24px;
}

.memory-game {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-gap: 5px;
  margin-top: 5vh;

  /* background-image: url('your-memory-game-background.jpg');
  background-size: cover; */
}

.memory-card {
  position: relative;
  width: 100px;
  height: 100px;
  perspective: 1000px;
  cursor: pointer;
  margin: 10px;
  border: 2px solid black;
  border-radius: 8px;
  /* adjust this value to control the level of rounding */
  box-sizing: border-box;
  /* this ensures that the border size is included in the element's total width and height */
}


.memory-card img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 8px;
}

.front-face,
.back-face {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
}

.front-face {
  transform: rotateY(180deg);
}

/* Add styles for the .flip class */
.memory-card.flip .front-face {
  transform: rotateY(0deg);
}

.memory-card.flip .back-face {
  transform: rotateY(180deg);
}

.matched {
  pointer-events: none;
}

/* The Modal (background) */
.modal {
  position: fixed;
  display: none;
  z-index: 1;
  /* Stay in place */
  background-color: rgba(0, 0, 0, 0);
  color: white;
  margin: auto;
  padding: 20px;
  /* border: 1px solid rgba(255, 255, 255, 0.3); */

  /* Adjusted border color with transparency */
  width: 100%;
  /* Adjusted to 80% */
  height: 100%;
  /* Adjusted to 80% */
  box-sizing: border-box;
  /* Include padding and border in the element's total width and height */
}

/* Modal Content */
.modal-content {
  background-color: rgba(255, 255, 255, .5);
  color: mediumvioletred;
  font-size: 35px;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.8);
  margin: auto;
  padding: 20px;
  border: 1px solid #888;
  border-radius: 20px;
  width: 80%;
  /* Adjusted to 100% */
  height: 10%;
  /* Adjusted to 100% */
}

.centered-text {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* The Close Button */
.close {
  color: #aaaaaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: #000;
  text-decoration: none;
  cursor: pointer;
}

/* Button styling */
.play-again-btn {
  background-color: #4CAF50;
  background-color: mediumspringgreen;
  /* Green background color */
  color: black;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2);
  /* White text color */
  padding: 10px 20px;
  /* Padding around the text */
  font-size: 16px;
  /* Font size */
  border: 2px solid #000;
  /* Black border */
  border-radius: 10px;
  /* Rounded corners */
  margin-top: 20px;
  /* Margin above the button */
  cursor: pointer;
  /* Cursor style on hover */
  transition: background-color 0.3s, border-color 0.3s;
  /* Smooth transitions on hover */
}

.play-again-btn:hover {
  background-color: #45a049;
  /* Darker green color on hover */
  border-color: #333;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.8);
  /* Darker border color on hover */
}

.no-display {
  display: none;
}


/* Media query for screens with a maximum width of 600 pixels (smartphones) */
@media (max-width: 600px) {
  .memory-game {
    grid-template-columns: repeat(3, 1fr);
    margin-top: 0;
  }

  h1,
  .display-text {
    margin-top: 0px;
  }
}